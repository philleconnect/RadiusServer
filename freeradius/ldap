ldap {
        server = 'ldap'
        port = 389
        identity = 'cn=admin,dc=SLAPD_DOMAIN1,dc=SLAPD_DOMAIN0'
        password = SLAPD_PASSWORD
        base_dn = 'dc=SLAPD_DOMAIN1,dc=SLAPD_DOMAIN0'
        update {
                #control:Password-With-Header    += 'userPassword' # Use this for GTC-Auth only
                control:NT-Password := 'sambaNTPassword' # Use this for MSCHAP-Auth
        }
        user {
                base_dn = "ou=users,${..base_dn}"
                base_filter = '(objectClass=posixAccount)'
                filter = "(uid=%{%{Stripped-User-Name}:-%{User-Name}})"
                sasl {
                }
        }

        #
        #  User membership checking.
        #
        #groupmembership_filter = (&(objectClass=posixGroup)(memberUid=%{Stripped-User-Name:-%{User-Name}}))
        #groupname_attribute = "cn"
        group {
                base_dn = "ou=groups,${..base_dn}"
                filter = '(objectClass=posixGroup)'
                membership_attribute = 'memberOf'
                membership_filter = "(memberUid=%{%{Stripped-User-Name}:-%{User-Name}})"
        }

#        accounting {
#                reference = "%{tolower:type.%{Acct-Status-Type}}"
#                type {
#                        start {
#                                update {
#                                        description := "Online at %S"
#                                }
#                        }
#                        interim-update {
#                                update {
#                                        description := "Last seen at %S"
#                                }
#                        }
#                        stop {
#                                update {
#                                        description := "Offline at %S"
#                                }
#                        }
#                }
#        }

        #
        #  LDAP connection-specific options.
        #
        #  These options set timeouts, keep-alives, etc. for the connections.
        #
        options {
                chase_referrals = yes
                rebind = yes
                res_timeout = 10
                srv_timelimit = 3
                net_timeout = 1
                idle = 60
                probes = 3
                interval = 3
                ldap_debug = 0x0028
        }
        tls {
                start_tls = no
        }
        pool {
                start = ${thread[pool].start_servers}
                min = ${thread[pool].min_spare_servers}
                max = ${thread[pool].max_servers}
                spare = ${thread[pool].max_spare_servers}
                uses = 0
                retry_delay = 30
                lifetime = 0
                idle_timeout = 60
        }
}
